# This file is autogenerated by maturin v1.0.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  PACKAGE_NAME: spvn
  PYTHON_VERSION: "3.10"
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64-apple-darwin
          args: --release --out dist --sdist
      - name: Install built wheel - x86_64
        run: |
          pip install spvn --no-index --find-links dist --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist
      - name: Install built wheel - universal2
        run: |
          pip install spvn --no-index --find-links dist --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Archive binary
        run: |
          cd target/release
          tar czvf spvn.tar.gz spvn
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: spvn-apple-darwin.tar.gz
          file: target/release/spvn.tar.gz
          tag: ${{ github.ref }}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        platform:
          [
            { python-architecture: "x64", target: "x86_64-pc-windows-msvc" },
            { python-architecture: "x86", target: "i686-pc-windows-msvc" },
          ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.6
          architecture: ${{ matrix.platform.python-architecture }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
      - name: Install built wheel
        run: |
          pip install spvn --no-index --find-links dist --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          [
            { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl" },
            { target: "i686-unknown-linux-musl", image_tag: "i686-musl" },
            { target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl" },
            {
              target: "armv7-unknown-linux-musleabihf",
              image_tag: "armv7-musleabihf",
            },
            {
              target: "powerpc64le-unknown-linux-musl",
              image_tag: "powerpc64le-musl",
            },
          ]
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: "-mfpu=vfpv3-d16"
    steps:
      - uses: actions/checkout@v3
      - name: Build Wheels - manylinux
        uses: PyO3/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          container: off
          args: --release -o dist
      - name: Build Wheels - musllinux
        uses: PyO3/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_1
          container: off
          args: --release -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Archive binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf spvn.tar.gz spvn
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: spvn-${{ matrix.platform.target }}.tar.gz
          file: target/${{ matrix.platform.target }}/release/spvn.tar.gz
          tag: ${{ github.ref }}

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Test Wheel
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.tar.gz --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs:
      - macos
      - linux
      - windows
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          verbose: true
          skip-existing: true
