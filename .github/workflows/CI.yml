# This file is autogenerated by maturin v1.0.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  PACKAGE_NAME: spvn
  PYTHON_VERSION: "3.10"
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        architecture: x64
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install spvn --no-index --find-links dist --force-reinstall
        spvn --help
        python3 -m spvn --help
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le, ppc64]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist
    - uses: uraimo/run-on-arch-action@v2.0.5
      if: matrix.target != 'ppc64'
      name: Install built wheel
      with:
        arch: ${{ matrix.target }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update
          apt-get install -y --no-install-recommends python3 python3-pip
          pip3 install -U pip
        run: |
          pip3 install spvn --no-index --find-links dist/ --force-reinstall
          spvn --help
          python3 -m spvn --help
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        architecture: x64
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: musllinux_1_2
        args: --release --out dist
    - name: Install built wheel
      if: matrix.target == 'x86_64-unknown-linux-musl'
      uses: addnab/docker-run-action@v3
      with:
        image: alpine:latest
        options: -v ${{ github.workspace }}:/io -w /io
        run: |
          apk add py3-pip
          pip3 install spvn --no-index --find-links /io/dist/ --force-reinstall
          spvn --help
          python3 -m spvn --help
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version:  ${{ env.PYTHON_VERSION }}
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.platform.target }}
        manylinux: musllinux_1_2
        args: --release --out dist
    - uses: uraimo/run-on-arch-action@master
      name: Install built wheel
      with:
        arch: ${{ matrix.platform.arch }}
        distro: alpine_latest
        githubToken: ${{ github.token }}
        install: |
          apk add py3-pip
        run: |
          pip3 install spvn --no-index --find-links dist/ --force-reinstall
          spvn --help
          python3 -m spvn --help
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:

        platform:
          - target: x86_64-pc-windows-msvc
            arch: x64
          - target: i686-pc-windows-msvc
            arch: x86
          - target: aarch64-pc-windows-msvc
            arch: x64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
      - name: Test Wheel
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          python -m pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos-x86_64:
    strategy: 
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build Wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist
      - name: Test Wheels
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    strategy: 
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --target universal2-apple-darwin --out dist
      - name: Test wheel
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*universal2.whl --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Test Wheel
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.tar.gz --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs:
      - macos
      - macos-x86_64
      - windows
      - linux
      - linux-cross
      - musllinux
      - musllinux-cross
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          verbose: true
          skip-existing: true
