# This file is autogenerated by maturin v1.0.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  PACKAGE_NAME: spvn
  PYTHON_VERSION: "3.9"
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
    env:
      CC: "clang"
      CFLAGS: "-O2 -fno-plt"
      LDFLAGS: "-O2 -flto=thin -fuse-ld=lld -Wl,--as-needed"
      RUSTFLAGS: "-C linker=clang -C link-arg=-fuse-ld=lld"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Add rustup target
        run: rustup target add ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist --compatibility manylinux_2_17 -i python${{ env.PYTHON_VERSION }}
      - name: Test wheel
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux-gnu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-gnu
            arch: aarch64
            cflags: '-O2'
          - target: armv7-unknown-linux-gnueabihf
            arch: armv7
            cflags: '-Os'
          - target: s390x-unknown-linux-gnu
            arch: s390x
            cflags: '-O2 -march=z10'
          - target: powerpc64le-unknown-linux-gnu
            arch: ppc64le
            cflags: '-O2'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Add rustup target
        run: rustup target add ${{ matrix.platform.target }}
      - name: musl-tools
        run: sudo apt install musl-tool
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          PYO3_CROSS_LIB_DIR: "/opt/python/cp39-cp39"
          CFLAGS: "${{ matrix.platform.cflags }}"
          LDFLAGS: "${{ matrix.platform.cflags }} -flto -Wl,--as-needed"
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          args: --release --out dist
      - uses: uraimo/run-on-arch-action@v2
        if: matrix.platform.arch != 'ppc64'
        name: Test wheel
        with:
          arch: ${{ matrix.platform.arch }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip3 install ${{ env.PACKAGE_NAME }} --no-index --find-links dist/ --force-reinstall
            spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
            platform: linux/arm64
          - target: x86_64-unknown-linux-musl
            arch: x86_64
            platform: linux/amd64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Add rustup target
        run: rustup target add ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          CC: "gcc"
          CFLAGS: "-O2 -fno-plt"
          LDFLAGS: "-O2 -flto -Wl,--as-needed"
          RUSTFLAGS: "-C target-feature=-crt-static"
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          args: --release --out dist -i python${{ env.PYTHON_VERSION }}
      - name: Test wheel
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            apk add py3-pip
            pip3 install ${{ env.PACKAGE_NAME }} --no-index --find-links /io/dist/ --force-reinstall
            spvn --help
            python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
            cflags: '-O2'
          - target: armv7-unknown-linux-gnueabihf
            arch: armv7
            cflags: '-Os'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Add rustup target
        run: rustup target add ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env: 
          CC: "gcc"
          PYO3_CROSS_LIB_DIR: "/opt/python/cp39-cp39"
          CFLAGS: "${{ matrix.target.cflags }}"
          LDFLAGS: "${{ matrix.target.cflags }} -flto -Wl,--as-needed"
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          args: --release --out dist
      - uses: uraimo/run-on-arch-action@v2
        name: Test wheel
        with:
          arch: ${{ matrix.platform.arch }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          install: |
            apk add py3-pip
          run: |
            pip3 install ${{ env.PACKAGE_NAME }} --no-index --find-links dist/ --force-reinstall
            spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        platform:
          - target: x86_64-pc-windows-msvc
            arch: x64
          - target: i686-pc-windows-msvc
            arch: x86
          - target: aarch64-pc-windows-msvc
            arch: x64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
      - name: Test Wheel
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          python -m pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos-x86_64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build Wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist
      - name: Test Wheels
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --target universal2-apple-darwin --out dist
      - name: Test wheel
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*universal2.whl --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Test Wheel
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.tar.gz --force-reinstall
          spvn --help
          python -m spvn --help
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs:
      - macos
      - macos-x86_64
      - windows
      - linux
      - linux-gnu
      - musllinux
      - musllinux-cross
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          verbose: true
          skip-existing: true
